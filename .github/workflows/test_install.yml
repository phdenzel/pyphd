# This worflow will install the package and run linting on a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name : Test installation on all Python versions

on:
  push:
    branches:
      - "**"

jobs:
  test-install:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up 🐍 ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install 📦 and 👽️
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[dev]

      - name: 🚨 with ruff
        run: |
          # stop the build if there are Python syntax errors or undefined names
          run check . --select=E9,F63,F7,F82 --output-format=github
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          ruff check . --extend-select=D,UP --line-length=127 --output-format=github --exit-zero

      - name: 🧪 with pytest
        run: |
          pytest --junitxml=junit/test-results-${{ matrix.python-version }}.xml

      - name: 🗃️ pytest artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/pytest-results-${{ matrix.python-version }}.xml
        if: ${{ always() }}
